#!/bin/bash

# TODO: add benchmark specific options here
#ELF="$1"
#
#run-elf $ELF

# benchmark-run target elf cache-size lines

set -e

LOGDIR="$ICLANG_ROOT/benchmarks/logs"
mkdir -p $LOGDIR

# Uninstrumented
# Does not perform any transformations but does go trough the pipeline
function nacho-naive() {
    cache=$1
    lines=$2
	run-elf \
        -p custom_cache_plugin.so \
        -a hash-method=0 \
        -a cache-size=$cache \
        -a cache-lines=$lines \
        -a custom-cache-log-file=$LOGDIR/$name-$compile_config-run-nacho-naive \
        -a enable-pw-bit=0 \
        $elf
}

function nacho-pw() {
    cache=$1
    lines=$2
	run-elf \
        -p custom_cache_plugin.so \
        -a hash-method=0 \
        -a cache-size=$cache \
        -a cache-lines=$lines \
        -a custom-cache-log-file=$LOGDIR/$name-$compile_config-run-nacho-pw \
        -a enable-pw-bit=0 \
        $elf
}

function nacho-clank() {
    cache=$1
    lines=$2
	run-elf \
        -p clank_cache_plugin.so \
        -a hash-method=0 \
        -a cache-size=$cache \
        -a cache-lines=$lines \
        -a custom-cache-log-file=$LOGDIR/$name-$compile_config-run-nacho-clank \
        $elf
}

function clank() {
	run-elf \
        -p simple_war_detect_plugin.so \
        -a clank-log-file=$LOGDIR/$name-$compile_config-run-clank \
        $elf
}


function prowl() {
    cache=$1
	run-elf -p custom_cache_plugin.so \
        -a hash-method=1 \
        -a cache-size=$cache \
        -a cache-lines=2 \
        -a custom-cache-log-file=$LOGDIR/$name-$compile_config-run-prowl \
        $elf
}

function help() {
    echo "Usage: benchmark-run [target]"
    echo ""

    # Other
    echo ""
    echo "other:"
    echo "  help       print this help message"
}

# Arguments
target="$1"
elf="$2"
compile_config="$3"

if [ -z "$compile_config" ]; then
    compile_config="unknown"
fi

# Vars
name=$(basename $elf .elf)

# Check for all the arguments
if [ "$#" -lt 2 ]; then
    echo "Please provide all arguments"
    help
    exit 1
fi

# Run a composit target with arguemts
# Replace + with space should be the correct argument
comp_target=${target//"+"/" "}
echo "Running target: $comp_target"
$comp_target $elf $bench_name
exit 0

# Not a target
echo "Target '$target' does not exist"
help
exit 1

